{"version":3,"sources":["components/AppContainer/AppContainer.js","pages/Home/Home.js","components/DenseImage/DenseImage.js","pages/Path/Path.js","App.js","serviceWorker.js","index.js","components/DenseImage/DenseImage.module.scss"],"names":["AppContainer","props","className","children","Home","paths","map","path","key","_id","$oid","name","start_address","end_address","start_coordinates","end_coordinates","directions","distance","duration","to","DenseImage","filename","rotated","objects","useState","selectedObject","setSelectedObject","classNames","styles","container","src","process","alt","bboxContainer","width","viewBox","id","replace","sort","a","b","bbox","filter","d","score","object","i","x","y","height","href","style","clipPath","Fragment","objRect","onMouseOver","class_subj","onMouseOut","labelContainer","withRouter","setErrors","steps","setSteps","fetch","match","params","json","then","res","d3Groups","split","catch","err","useEffect","fetchData","step","results","App","exact","component","Path","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.81c8e905.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AppContainer = props => {\n  return <div className=\"h-100\">{props.children}</div>;\n};\nexport default AppContainer;\n","import React from \"react\";\nimport styles from \"./Home.module.scss\";\nimport { Link } from \"react-router-dom\";\nimport paths from \"./paths.json\";\n\nconst Home = () => {\n  return (\n    <div className=\"d-flex flex-column h-100\">\n      {paths.map(path => {\n        return (\n          <div key={path._id.$oid} className=\"flex-grow-1 p-2 border\">\n            <p>{path.name}</p>\n            <h2>\n              {path.start_address} - {path.end_address}\n            </h2>\n            <h4>\n              {path.start_coordinates[0]},{path.start_coordinates[1]} -{\" \"}\n              {path.end_coordinates[0]},{path.end_coordinates[1]}\n            </h4>\n            <p>\n              {path.directions.distance / 1000} km - {path.directions.duration}{\" \"}\n              seconds\n            </p>\n            <Link className=\"btn btn-secondary\" to={`/path/${path._id.$oid}`}>\n              explore\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport { Tooltip } from \"reactstrap\";\nimport styles from \"./DenseImage.module.scss\";\n\nconst DenseImage = ({ path, filename, rotated, objects }) => {\n  const [selectedObject, setSelectedObject] = useState(\"\");\n  return (\n    <div\n      className={classNames(styles.container, { [styles.rotated]: rotated })}\n    >\n      <img\n        src={`${process.env.PUBLIC_URL}/images/${path}/${filename}`}\n        alt=\"img\"\n      ></img>\n\n      {objects && (\n        <div className={styles.bboxContainer}>\n          <svg width=\"100%\" viewBox=\"0 0 640 640\">\n            <defs>\n              <clipPath id={\"clip_\" + filename.replace(\".jpg\", \"\")}>\n                {objects\n                  .sort((a, b) => {\n                    return b.bbox[2] * b.bbox[3] - a.bbox[2] * a.bbox[3];\n                  })\n                  .filter(d => d.score >= 0.85)\n                  .map((object, i) => {\n                    return (\n                      <rect\n                        key={i}\n                        x={object.bbox[0]}\n                        y={object.bbox[1]}\n                        width={object.bbox[2]}\n                        height={object.bbox[3]}\n                      ></rect>\n                    );\n                  })}\n              </clipPath>\n            </defs>\n            <image\n              href={`${process.env.PUBLIC_URL}/images/${path}/${filename}`}\n              x=\"0\"\n              y=\"0\"\n              height=\"640\"\n              width=\"640\"\n              style={{ clipPath: `url(#clip_${filename.replace(\".jpg\", \"\")})` }}\n            />\n            {objects\n              .sort((a, b) => {\n                return b.bbox[2] * b.bbox[3] - a.bbox[2] * a.bbox[3];\n              })\n              .filter(d => d.score >= 0.85)\n              .map((object, i) => {\n                return (\n                  <React.Fragment key={i}>\n                    <rect\n                      className={styles.objRect}\n                      x={object.bbox[0]}\n                      y={object.bbox[1]}\n                      width={object.bbox[2]}\n                      height={object.bbox[3]}\n                      onMouseOver={() => {\n                        setSelectedObject(object.class_subj);\n                      }}\n                      onMouseOut={() => {\n                        setSelectedObject(\"\");\n                      }}\n                    ></rect>\n                  </React.Fragment>\n                );\n              })}\n          </svg>\n        </div>\n      )}\n\n      <div className={styles.labelContainer}>\n        <h4>{selectedObject}</h4>\n      </div>\n    </div>\n  );\n};\nexport default DenseImage;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { groups as d3Groups } from \"d3-array\";\nimport DenseImage from \"../../components/DenseImage\";\n\nconst Path = props => {\n  const [hasError, setErrors] = useState(false);\n  const [steps, setSteps] = useState([]);\n\n  async function fetchData() {\n    const res = await fetch(\n      `${process.env.PUBLIC_URL}/${props.match.params.id}.json`\n    );\n    res\n      .json()\n      .then(res =>\n        setSteps(\n          d3Groups(res, d => d.filename.split(\"_\")[0]).sort((a, b) => {\n            return a[0] - b[0];\n          })\n        )\n      )\n      .catch(err => setErrors(err));\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"d-flex h-100\">\n      {steps.map((step, i) => {\n        return (\n          <div key={i} className=\"h-100 d-flex flex-column\">\n            <DenseImage\n              filename={step[1][1].filename}\n              path={props.match.params.id}\n              objects={step[1][1].results}\n              rotated\n            ></DenseImage>\n\n            <DenseImage\n              filename={step[1][0].filename.replace(\"left\", \"up\")}\n              path={props.match.params.id}\n            ></DenseImage>\n\n            <DenseImage\n              filename={step[1][0].filename}\n              path={props.match.params.id}\n              objects={step[1][0].results}\n            ></DenseImage>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\nexport default withRouter(Path);\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AppContainer from \"./components/AppContainer\";\nimport Home from \"./pages/Home\";\nimport Path from \"./pages/Path\";\n\nfunction App() {\n  return (\n    <AppContainer>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/path/:id\" component={Path} />\n        </Switch>\n      </Router>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DenseImage_container__3yAW9\",\"bboxContainer\":\"DenseImage_bboxContainer__3dycH\",\"labelContainer\":\"DenseImage_labelContainer__2Sdlw\",\"objRect\":\"DenseImage_objRect__2mIq2\",\"rotated\":\"DenseImage_rotated__1Ip8Y\"};"],"sourceRoot":""}